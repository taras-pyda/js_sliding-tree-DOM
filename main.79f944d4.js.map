{"version":3,"sources":["scripts/main.js"],"names":["items","document","querySelectorAll","list","querySelector","item","children","length","text","childNodes","data","trim","insertAdjacentHTML","itemIsShowed","addEventListener","e","span","target","closest","li","contains","hidden"],"mappings":";AAAA,aAmBA,SAAA,EAAA,GAAA,GAAA,oBAAA,QAAA,MAAA,EAAA,OAAA,UAAA,CAAA,GAAA,MAAA,QAAA,KAAA,EAAA,EAAA,IAAA,CAAA,IAAA,EAAA,EAAA,EAAA,aAAA,MAAA,CAAA,EAAA,EAAA,EAAA,WAAA,OAAA,GAAA,EAAA,OAAA,CAAA,MAAA,GAAA,CAAA,MAAA,EAAA,MAAA,EAAA,OAAA,EAAA,SAAA,GAAA,MAAA,GAAA,EAAA,GAAA,MAAA,IAAA,UAAA,yIAAA,IAAA,EAAA,EAAA,GAAA,EAAA,GAAA,EAAA,MAAA,CAAA,EAAA,WAAA,EAAA,EAAA,OAAA,aAAA,EAAA,WAAA,IAAA,EAAA,EAAA,OAAA,OAAA,EAAA,EAAA,KAAA,GAAA,EAAA,SAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAAA,WAAA,IAAA,GAAA,MAAA,EAAA,QAAA,EAAA,SAAA,QAAA,GAAA,EAAA,MAAA,KAAA,SAAA,EAAA,EAAA,GAAA,GAAA,EAAA,CAAA,GAAA,iBAAA,EAAA,OAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,UAAA,SAAA,KAAA,GAAA,MAAA,GAAA,GAAA,MAAA,WAAA,GAAA,EAAA,cAAA,EAAA,EAAA,YAAA,MAAA,QAAA,GAAA,QAAA,EAAA,MAAA,KAAA,GAAA,cAAA,GAAA,2CAAA,KAAA,GAAA,EAAA,EAAA,QAAA,GAAA,SAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,UAAA,EAAA,EAAA,QAAA,IAAA,IAAA,EAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,EAAA,GAAA,OAAA,EAjBA,IAiBA,EAjBMA,EAAQC,SAASC,iBAAiB,MAClCC,EAAOF,SAASG,cAAc,SAEjBJ,EAAAA,EAAAA,GAcnB,IAd0B,IAAA,EAAA,MAAA,EAAA,EAAA,KAAA,MAAA,CAAfK,IAAAA,EAAe,EAAA,MACpBA,GAAyB,IAAzBA,EAAKC,SAASC,OAAc,CACxBC,IAAAA,EAAOH,EAAKI,WAAW,GAAGC,KAAKC,OAErCN,EAAKI,WAAW,GAAGC,KAAO,GAE1BL,EAAKO,mBAAmB,aACdJ,iBAAAA,OAAAA,EADV,oBAQJ,MAAA,GAAA,EAAA,EAAA,GAAA,QAAA,EAAA,IAFA,IAAIK,GAAe,EAEnBV,EAAKW,iBAAiB,QAAS,SAAAC,GACvBC,IAAAA,EAAOD,EAAEE,OAAOC,QAAQ,QACxBC,EAAKJ,EAAEE,OAAOC,QAAQ,MAExBC,GAAAA,EAAGC,SAASJ,GACN,QAAA,GACDH,KAAiB,IAAjBA,EACHM,EAAGb,SAAS,GAAGe,QAAS,EACxBR,GAAe,EACf,MAEF,QACEM,EAAGb,SAAS,GAAGe,QAAS,EACxBR,GAAe","file":"main.79f944d4.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst items = document.querySelectorAll('li');\nconst list = document.querySelector('.tree');\n\nfor (const item of items) {\n  if (item.children.length !== 0) {\n    const text = item.childNodes[0].data.trim();\n\n    item.childNodes[0].data = '';\n\n    item.insertAdjacentHTML('afterbegin', `\n      <span>${text}</span>\n    `);\n  }\n};\n\nlet itemIsShowed = true;\n\nlist.addEventListener('click', e => {\n  const span = e.target.closest('span');\n  const li = e.target.closest('li');\n\n  if (li.contains(span)) {\n    switch (true) {\n      case itemIsShowed === true:\n        li.children[1].hidden = true;\n        itemIsShowed = false;\n        break;\n\n      default:\n        li.children[1].hidden = false;\n        itemIsShowed = true;\n        break;\n    }\n  }\n});\n"]}